import stdio
import declassifyutil
import lists

let 
    fun loop () = 
        let 
            val _ = printString "Waiting for response..."
            val newResponse = receive [hn ("NEWMATCH", profile) => profile]
            val (lev, name, year, gender, interests) = newResponse
            val _ = printString("Match found!")
            val _ = printString(name)
            val _ = print(year)
            val _ = if gender then printString("female") else ("male")
            val _ = print(interests)
        in 
            loop ()
        end

    fun aliceClient server_id =
        let 
            val levAlice = `{alice}` raisedTo `{}`
            val nameAlice = "Alice" raisedTo levAlice
            val yearAlice = 2105 raisedTo levAlice
            val genderAlice = true raisedTo levAlice
            val interestsAlice = ["dragons", "wars", "fire"] raisedTo levAlice
            val aliceProfile = (levAlice, nameAlice, yearAlice, genderAlice, interestsAlice) raisedTo `{}`

            fun shareInterest [] _ = false
            | shareInterest (x::xs) ys = 
                if elem x ys then true
                else shareInterest xs ys


            fun aliceAgent profileOther =
                let
                    val (levOther, nameOther, yearOther, genderOther, interestsOther) = profileOther

                    val matchAge = yearOther = yearAlice 
                    val matchInterests = shareInterest interestsAlice interestsOther

                    val match = matchAge andalso matchInterests

                    val maybeProfile = 
                        if match then
                            aliceProfile
                        else
                            ()

                    val aliceProfileForOther = declassifydeep(maybeProfile, authority, levOther)

                in
                    (match, aliceProfileForOther)
                end

            val _ = send (server_id, ("NEWPROFILE", (aliceProfile, aliceAgent, self())))

        in 
            loop ()
        end

    val serverId = whereis ("@datingServer", "datingServer")
in
    spawn (fn () => aliceClient serverId)
end



